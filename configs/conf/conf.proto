syntax = "proto3";
package kratos.api;

option go_package = "github.com/go-maple/kratos_sample/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server     = 1;
  Data data         = 2;
  Log log           = 3;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver       = 1;
    string dsn          = 2;
  }
  message Redis {
    string network                          = 1;
    string addr                             = 2;
    string password                         = 3;
    int32 db                                = 4;
    google.protobuf.Duration dial_timeout   = 5;
    google.protobuf.Duration read_timeout   = 6;
    google.protobuf.Duration write_timeout  = 7;
  }
  map<string,Database> database = 1;
  Redis         redis           = 2;
  Nacos         nacos           = 3;
  SnowFlake     snowflake       = 4;
  map<string,string> provider   = 5;
  ThirdParty        third_party = 6;
}

message SnowFlake { 
  int64 worker_id = 1; 
}

message Nacos {
  string host         = 1;
  uint64 port         = 2;
  string namespaceID  = 3;
  string logDir       = 4;
  string cacheDir     = 5;
}

message Log {
  string path         = 1; // 日志路径
}

message ThirdParty {
  message Sentry {
    string dsn = 1;
  }
  message Jaeger {
    string http_endpoint  = 1;
    string udp_address    = 2;
    string trace_service  = 3;
    string sampler_type   = 4;
    float sampler_param   = 5;
  }

  Sentry sentry           = 1;
  Jaeger jaeger           = 2;
}